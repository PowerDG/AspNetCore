Markup block - Gen<None> - 65 - (0:0,0)
    Tag block - Gen<TagHelper> - 65 - (0:0,0) - p - ptaghelper
        StartTagAndEndTag - <p> ... </p>
        Statement block - Gen<None> - 58 - (3:0,3)
            Transition span - Gen<None> - [@] - SpanEditHandler;Accepts:None - (3:0,3) - Tokens:1
                CSharpTokenType.Transition;[@];
            Code span - Gen<Stmt> - [do { var foo = bar;] - SpanEditHandler;Accepts:Any - (4:0,4) - Tokens:12
                CSharpTokenType.Keyword;[do];
                CSharpTokenType.WhiteSpace;[ ];
                CSharpTokenType.LeftBrace;[{];
                CSharpTokenType.WhiteSpace;[ ];
                CSharpTokenType.Identifier;[var];
                CSharpTokenType.WhiteSpace;[ ];
                CSharpTokenType.Identifier;[foo];
                CSharpTokenType.WhiteSpace;[ ];
                CSharpTokenType.Assign;[=];
                CSharpTokenType.WhiteSpace;[ ];
                CSharpTokenType.Identifier;[bar];
                CSharpTokenType.Semicolon;[;];
            Markup block - Gen<None> - 12 - (23:0,23)
                Markup span - Gen<Markup> - [ ] - SpanEditHandler;Accepts:Any - (23:0,23) - Tokens:1
                    HtmlTokenType.WhiteSpace;[ ];
                Tag block - Gen<TagHelper> - 10 - (24:0,24) - p - ptaghelper
                    StartTagAndEndTag - <p> ... </p>
                    Markup span - Gen<Markup> - [Foo] - SpanEditHandler;Accepts:Any - (27:0,27) - Tokens:1
                        HtmlTokenType.Text;[Foo];
                Markup span - Gen<Markup> - [ ] - SpanEditHandler;Accepts:None - (34:0,34) - Tokens:1
                    HtmlTokenType.WhiteSpace;[ ];
            Code span - Gen<Stmt> - [foo++; } while (foo<bar>);] - SpanEditHandler;Accepts:None - (35:0,35) - Tokens:15
                CSharpTokenType.Identifier;[foo];
                CSharpTokenType.Increment;[++];
                CSharpTokenType.Semicolon;[;];
                CSharpTokenType.WhiteSpace;[ ];
                CSharpTokenType.RightBrace;[}];
                CSharpTokenType.WhiteSpace;[ ];
                CSharpTokenType.Keyword;[while];
                CSharpTokenType.WhiteSpace;[ ];
                CSharpTokenType.LeftParenthesis;[(];
                CSharpTokenType.Identifier;[foo];
                CSharpTokenType.LessThan;[<];
                CSharpTokenType.Identifier;[bar];
                CSharpTokenType.GreaterThan;[>];
                CSharpTokenType.RightParenthesis;[)];
                CSharpTokenType.Semicolon;[;];
