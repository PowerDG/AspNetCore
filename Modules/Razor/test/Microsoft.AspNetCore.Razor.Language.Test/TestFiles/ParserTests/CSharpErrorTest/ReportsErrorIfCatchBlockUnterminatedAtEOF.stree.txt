Statement block - Gen<None> - 70 - (0:0,0)
    Code span - Gen<Stmt> - [try { baz(); } catch(Foo) { var foo = bar; if(foo != null) { bar(); } ] - SpanEditHandler;Accepts:Any - (0:0,0) - Tokens:45
        CSharpTokenType.Keyword;[try];
        CSharpTokenType.WhiteSpace;[ ];
        CSharpTokenType.LeftBrace;[{];
        CSharpTokenType.WhiteSpace;[ ];
        CSharpTokenType.Identifier;[baz];
        CSharpTokenType.LeftParenthesis;[(];
        CSharpTokenType.RightParenthesis;[)];
        CSharpTokenType.Semicolon;[;];
        CSharpTokenType.WhiteSpace;[ ];
        CSharpTokenType.RightBrace;[}];
        CSharpTokenType.WhiteSpace;[ ];
        CSharpTokenType.Keyword;[catch];
        CSharpTokenType.LeftParenthesis;[(];
        CSharpTokenType.Identifier;[Foo];
        CSharpTokenType.RightParenthesis;[)];
        CSharpTokenType.WhiteSpace;[ ];
        CSharpTokenType.LeftBrace;[{];
        CSharpTokenType.WhiteSpace;[ ];
        CSharpTokenType.Identifier;[var];
        CSharpTokenType.WhiteSpace;[ ];
        CSharpTokenType.Identifier;[foo];
        CSharpTokenType.WhiteSpace;[ ];
        CSharpTokenType.Assign;[=];
        CSharpTokenType.WhiteSpace;[ ];
        CSharpTokenType.Identifier;[bar];
        CSharpTokenType.Semicolon;[;];
        CSharpTokenType.WhiteSpace;[ ];
        CSharpTokenType.Keyword;[if];
        CSharpTokenType.LeftParenthesis;[(];
        CSharpTokenType.Identifier;[foo];
        CSharpTokenType.WhiteSpace;[ ];
        CSharpTokenType.NotEqual;[!=];
        CSharpTokenType.WhiteSpace;[ ];
        CSharpTokenType.Keyword;[null];
        CSharpTokenType.RightParenthesis;[)];
        CSharpTokenType.WhiteSpace;[ ];
        CSharpTokenType.LeftBrace;[{];
        CSharpTokenType.WhiteSpace;[ ];
        CSharpTokenType.Identifier;[bar];
        CSharpTokenType.LeftParenthesis;[(];
        CSharpTokenType.RightParenthesis;[)];
        CSharpTokenType.Semicolon;[;];
        CSharpTokenType.WhiteSpace;[ ];
        CSharpTokenType.RightBrace;[}];
        CSharpTokenType.WhiteSpace;[ ];
