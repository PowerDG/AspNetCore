Statement block - Gen<None> - 82 - (0:0,0)
    Code span - Gen<Stmt> - [for(int i = 0; i < 10; new Foo { Bar = "baz" }) { Debug.WriteLine(@"foo } bar"); }] - SpanEditHandler;Accepts:None - (0:0,0) - Tokens:44
        CSharpTokenType.Keyword;[for];
        CSharpTokenType.LeftParenthesis;[(];
        CSharpTokenType.Keyword;[int];
        CSharpTokenType.WhiteSpace;[ ];
        CSharpTokenType.Identifier;[i];
        CSharpTokenType.WhiteSpace;[ ];
        CSharpTokenType.Assign;[=];
        CSharpTokenType.WhiteSpace;[ ];
        CSharpTokenType.IntegerLiteral;[0];
        CSharpTokenType.Semicolon;[;];
        CSharpTokenType.WhiteSpace;[ ];
        CSharpTokenType.Identifier;[i];
        CSharpTokenType.WhiteSpace;[ ];
        CSharpTokenType.LessThan;[<];
        CSharpTokenType.WhiteSpace;[ ];
        CSharpTokenType.IntegerLiteral;[10];
        CSharpTokenType.Semicolon;[;];
        CSharpTokenType.WhiteSpace;[ ];
        CSharpTokenType.Keyword;[new];
        CSharpTokenType.WhiteSpace;[ ];
        CSharpTokenType.Identifier;[Foo];
        CSharpTokenType.WhiteSpace;[ ];
        CSharpTokenType.LeftBrace;[{];
        CSharpTokenType.WhiteSpace;[ ];
        CSharpTokenType.Identifier;[Bar];
        CSharpTokenType.WhiteSpace;[ ];
        CSharpTokenType.Assign;[=];
        CSharpTokenType.WhiteSpace;[ ];
        CSharpTokenType.StringLiteral;["baz"];
        CSharpTokenType.WhiteSpace;[ ];
        CSharpTokenType.RightBrace;[}];
        CSharpTokenType.RightParenthesis;[)];
        CSharpTokenType.WhiteSpace;[ ];
        CSharpTokenType.LeftBrace;[{];
        CSharpTokenType.WhiteSpace;[ ];
        CSharpTokenType.Identifier;[Debug];
        CSharpTokenType.Dot;[.];
        CSharpTokenType.Identifier;[WriteLine];
        CSharpTokenType.LeftParenthesis;[(];
        CSharpTokenType.StringLiteral;[@"foo } bar"];
        CSharpTokenType.RightParenthesis;[)];
        CSharpTokenType.Semicolon;[;];
        CSharpTokenType.WhiteSpace;[ ];
        CSharpTokenType.RightBrace;[}];
