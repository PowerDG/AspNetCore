Statement block - Gen<None> - 49 - (0:0,0)
    MetaCode span - Gen<None> - [{] - SpanEditHandler;Accepts:None - (0:0,0) - Tokens:1
        CSharpTokenType.LeftBrace;[{];
    Code span - Gen<Stmt> - [ if (true) { var val = @x; if (val != 3) { } } ] - AutoCompleteEditHandler;Accepts:Any,AutoComplete:[<null>];AtEOL - (1:0,1) - Tokens:35
        CSharpTokenType.WhiteSpace;[ ];
        CSharpTokenType.Keyword;[if];
        CSharpTokenType.WhiteSpace;[ ];
        CSharpTokenType.LeftParenthesis;[(];
        CSharpTokenType.Keyword;[true];
        CSharpTokenType.RightParenthesis;[)];
        CSharpTokenType.WhiteSpace;[ ];
        CSharpTokenType.LeftBrace;[{];
        CSharpTokenType.WhiteSpace;[ ];
        CSharpTokenType.Identifier;[var];
        CSharpTokenType.WhiteSpace;[ ];
        CSharpTokenType.Identifier;[val];
        CSharpTokenType.WhiteSpace;[ ];
        CSharpTokenType.Assign;[=];
        CSharpTokenType.WhiteSpace;[ ];
        CSharpTokenType.Transition;[@];
        CSharpTokenType.Identifier;[x];
        CSharpTokenType.Semicolon;[;];
        CSharpTokenType.WhiteSpace;[ ];
        CSharpTokenType.Keyword;[if];
        CSharpTokenType.WhiteSpace;[ ];
        CSharpTokenType.LeftParenthesis;[(];
        CSharpTokenType.Identifier;[val];
        CSharpTokenType.WhiteSpace;[ ];
        CSharpTokenType.NotEqual;[!=];
        CSharpTokenType.WhiteSpace;[ ];
        CSharpTokenType.IntegerLiteral;[3];
        CSharpTokenType.RightParenthesis;[)];
        CSharpTokenType.WhiteSpace;[ ];
        CSharpTokenType.LeftBrace;[{];
        CSharpTokenType.WhiteSpace;[ ];
        CSharpTokenType.RightBrace;[}];
        CSharpTokenType.WhiteSpace;[ ];
        CSharpTokenType.RightBrace;[}];
        CSharpTokenType.WhiteSpace;[ ];
    MetaCode span - Gen<None> - [}] - SpanEditHandler;Accepts:None - (48:0,48) - Tokens:1
        CSharpTokenType.RightBrace;[}];
