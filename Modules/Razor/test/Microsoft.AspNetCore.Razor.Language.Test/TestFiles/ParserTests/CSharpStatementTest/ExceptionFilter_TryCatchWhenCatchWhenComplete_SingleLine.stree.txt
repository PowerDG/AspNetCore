Statement block - Gen<None> - 92 - (0:0,0)
    Transition span - Gen<None> - [@] - SpanEditHandler;Accepts:None - (0:0,0) - Tokens:1
        CSharpTokenType.Transition;[@];
    Code span - Gen<Stmt> - [try { A(); } catch(Exception) when (true) { B(); } catch(IOException) when (false) { C(); }] - SpanEditHandler;Accepts:Any - (1:0,1) - Tokens:50
        CSharpTokenType.Keyword;[try];
        CSharpTokenType.WhiteSpace;[ ];
        CSharpTokenType.LeftBrace;[{];
        CSharpTokenType.WhiteSpace;[ ];
        CSharpTokenType.Identifier;[A];
        CSharpTokenType.LeftParenthesis;[(];
        CSharpTokenType.RightParenthesis;[)];
        CSharpTokenType.Semicolon;[;];
        CSharpTokenType.WhiteSpace;[ ];
        CSharpTokenType.RightBrace;[}];
        CSharpTokenType.WhiteSpace;[ ];
        CSharpTokenType.Keyword;[catch];
        CSharpTokenType.LeftParenthesis;[(];
        CSharpTokenType.Identifier;[Exception];
        CSharpTokenType.RightParenthesis;[)];
        CSharpTokenType.WhiteSpace;[ ];
        CSharpTokenType.Keyword;[when];
        CSharpTokenType.WhiteSpace;[ ];
        CSharpTokenType.LeftParenthesis;[(];
        CSharpTokenType.Keyword;[true];
        CSharpTokenType.RightParenthesis;[)];
        CSharpTokenType.WhiteSpace;[ ];
        CSharpTokenType.LeftBrace;[{];
        CSharpTokenType.WhiteSpace;[ ];
        CSharpTokenType.Identifier;[B];
        CSharpTokenType.LeftParenthesis;[(];
        CSharpTokenType.RightParenthesis;[)];
        CSharpTokenType.Semicolon;[;];
        CSharpTokenType.WhiteSpace;[ ];
        CSharpTokenType.RightBrace;[}];
        CSharpTokenType.WhiteSpace;[ ];
        CSharpTokenType.Keyword;[catch];
        CSharpTokenType.LeftParenthesis;[(];
        CSharpTokenType.Identifier;[IOException];
        CSharpTokenType.RightParenthesis;[)];
        CSharpTokenType.WhiteSpace;[ ];
        CSharpTokenType.Keyword;[when];
        CSharpTokenType.WhiteSpace;[ ];
        CSharpTokenType.LeftParenthesis;[(];
        CSharpTokenType.Keyword;[false];
        CSharpTokenType.RightParenthesis;[)];
        CSharpTokenType.WhiteSpace;[ ];
        CSharpTokenType.LeftBrace;[{];
        CSharpTokenType.WhiteSpace;[ ];
        CSharpTokenType.Identifier;[C];
        CSharpTokenType.LeftParenthesis;[(];
        CSharpTokenType.RightParenthesis;[)];
        CSharpTokenType.Semicolon;[;];
        CSharpTokenType.WhiteSpace;[ ];
        CSharpTokenType.RightBrace;[}];
