Statement block - Gen<None> - 43 - (0:0,0)
    Transition span - Gen<None> - [@] - SpanEditHandler;Accepts:None - (0:0,0) - Tokens:1
        CSharpTokenType.Transition;[@];
    Code span - Gen<Stmt> - [for(int i = 0; i++; i < length) { foo(); }] - SpanEditHandler;Accepts:None - (1:0,1) - Tokens:30
        CSharpTokenType.Keyword;[for];
        CSharpTokenType.LeftParenthesis;[(];
        CSharpTokenType.Keyword;[int];
        CSharpTokenType.WhiteSpace;[ ];
        CSharpTokenType.Identifier;[i];
        CSharpTokenType.WhiteSpace;[ ];
        CSharpTokenType.Assign;[=];
        CSharpTokenType.WhiteSpace;[ ];
        CSharpTokenType.IntegerLiteral;[0];
        CSharpTokenType.Semicolon;[;];
        CSharpTokenType.WhiteSpace;[ ];
        CSharpTokenType.Identifier;[i];
        CSharpTokenType.Increment;[++];
        CSharpTokenType.Semicolon;[;];
        CSharpTokenType.WhiteSpace;[ ];
        CSharpTokenType.Identifier;[i];
        CSharpTokenType.WhiteSpace;[ ];
        CSharpTokenType.LessThan;[<];
        CSharpTokenType.WhiteSpace;[ ];
        CSharpTokenType.Identifier;[length];
        CSharpTokenType.RightParenthesis;[)];
        CSharpTokenType.WhiteSpace;[ ];
        CSharpTokenType.LeftBrace;[{];
        CSharpTokenType.WhiteSpace;[ ];
        CSharpTokenType.Identifier;[foo];
        CSharpTokenType.LeftParenthesis;[(];
        CSharpTokenType.RightParenthesis;[)];
        CSharpTokenType.Semicolon;[;];
        CSharpTokenType.WhiteSpace;[ ];
        CSharpTokenType.RightBrace;[}];
